{"ast":null,"code":"var _jsxFileName = \"/Users/ismael/Desktop/React-Formation/movieapp/src/components/MovieList.jsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MovieList = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container d-flex justifiy-content-start\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.Poster,\n        alt: movie.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["MovieList","props","_jsxDEV","_Fragment","children","movies","map","movie","index","className","src","Poster","alt","Title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ismael/Desktop/React-Formation/movieapp/src/components/MovieList.jsx"],"sourcesContent":["const MovieList = (props) => {\n    return (\n        <>\n            {props.movies.map((movie, index) => (\n                <div className=\"image-container d-flex justifiy-content-start\">\n                    <img src={movie.Poster} alt={movie.Title} />\n                </div>\n            ))}\n        </>\n    )\n}\n\nexport default MovieList;"],"mappings":";;AAAA,MAAMA,SAAS,GAAIC,KAAK,IAAK;EACzB,oBACIC,OAAA,CAAAC,SAAA;IAAAC,QAAA,EACKH,KAAK,CAACI,MAAM,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC3BN,OAAA;MAAKO,SAAS,EAAC,+CAA+C;MAAAL,QAAA,eAC1DF,OAAA;QAAKQ,GAAG,EAAEH,KAAK,CAACI,MAAO;QAACC,GAAG,EAAEL,KAAK,CAACM;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CACR;EAAC,gBACJ,CAAC;AAEX,CAAC;AAAAC,EAAA,GAVKlB,SAAS;AAYf,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}